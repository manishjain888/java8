/*
 * This build file was auto generated by running the Gradle 'init' task
 * by 'manishjain' at '5/21/16 6:59 AM' with Gradle 2.13
 *
 * This generated file contains a sample Java project to get you started.
 * For more details take a look at the Java Quickstart chapter in the Gradle
 * user guide available at https://docs.gradle.org/2.13/userguide/tutorial_java_projects.html
 */

// Apply the java plugin to add support for Java
plugins {
  id "nebula.ospackage" version "3.2.0"
} 

apply plugin: 'nebula.ospackage'
apply plugin: 'java'
apply plugin: "jacoco"

// In this section you declare where to find the dependencies of your project
repositories {
   mavenCentral()
   jcenter()
}

// In this section you declare the dependencies for your production and test code
dependencies {
    compile 'org.slf4j:slf4j-api:1.7.21'

    testCompile 'junit:junit:4.12'
}

sourceSets {
     main {
        java {       srcDir 'src/main/java/'      }
        resources {  srcDir 'src/main/resources'  }
     }

   test {
        java {       srcDir 'src/test/java/'      }
        resources {  srcDir 'src/test/resources'  }
    }
}


jar {
    baseName = 'smith'
    version = '1.0'
    manifest {
              attributes 'Main-Class': 'src.main.java.HelloWorld '}
}

ospackage {
    packageName = 'foo'
        version = '1.2.3'
        release = '1'
        arch = I386
        os = LINUX
}

// buildRpm and buildDeb are implicitly created, but can still be configured if needed

buildRpm {
    arch = I386
}
